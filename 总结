合并pull两个不同的项目，出现的问题如何去解决
fatal: refusing to merge unrelated histories

假如我们的源是origin，分支是master，那么我们 需要这样写
git pull origin master --allow-unrelated-histories需要知道，我们的源可以是本地的路径


远程库与本地库之间的操作：
1.从远程克隆一份到本地可以通过git clone

Git支持HTTPS和SSH协议，SSH速度更快
$ git clone git@github.com:nanfei9330/xx.git

2.本地库关联远程库，在本地仓库目录运行命令：
$ git remote add origin git@github.com:nanfei9330/learngit.git

3.推送master分支的所有内容
$ git push -u origin master

第一次使用加上了-u参数，是推送内容并关联分支。

推送成功后就可以看到远程和本地的内容一模一样，下次只要本地作了提交，就可以通过命令：

$ git push origin master

取回远程主机某个分支的更新，如

$ git pull origin master

远程仓库变更，怎么修改Git remote add时使用的远程仓库？

1. 修改命令
git remte origin set-url URL

2.先删后加
git remote rm origin 
git remote add origin git@github.com:Liutos/foobar.git 

3. 直接修改config文件 ./git/config

 使用git在本地创建一个项目的过程
    $ makdir ~/hello-world    //创建一个项目hello-world
    $ cd ~/hello-world       //打开这个项目
    $ git init             //初始化 
    $ touch README
    $ git add README        //更新README文件
    $ git commit -m 'first commit'     //提交更新，并注释信息“first commit” 
    $ git remote add origin git@github.com:defnngj/hello-world.git     //连接远程github项目  
    $ git push -u origin master     //将本地项目更新到github项目上去
 
